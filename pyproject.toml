[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agent-studio"
version = "1.0.0"
description = "A comprehensive framework for building agent-based workflows"
authors = [
    {name = "Agent Studio Team", email = "team@agent-studio.dev"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "agents", "workflows", "langgraph", "a2a", "mcp"]

dependencies = [
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
langgraph = [
    "langgraph>=0.1.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
all = [
    "agent-studio[langgraph,dev,docs]",
]

[project.scripts]
agent-studio = "agent_studio.cli.main:main_cli"
agentstudio = "agent_studio.cli.main:main_cli"

[project.urls]
Homepage = "https://github.com/agent-studio/agent-studio"
Repository = "https://github.com/agent-studio/agent-studio"
Documentation = "https://agent-studio.readthedocs.io/"
"Bug Reports" = "https://github.com/agent-studio/agent-studio/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["agent_studio*"]

[tool.setuptools.package-data]
agent_studio = [
    "templates/*",
    "templates/**/*",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "langgraph.*",
    "langchain_core.*",
    "openai.*",
]
ignore_missing_imports = true
